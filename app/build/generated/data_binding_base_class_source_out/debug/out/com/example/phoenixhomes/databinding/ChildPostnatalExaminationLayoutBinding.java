// Generated by view binder compiler. Do not edit!
package com.example.phoenixhomes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.phoenixhomes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChildPostnatalExaminationLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView artHolder;

  @NonNull
  public final TextView babyConditionHolder;

  @NonNull
  public final TextView babyTempHolder;

  @NonNull
  public final TextView breastfeedingHolder;

  @NonNull
  public final TextView breatheHolder;

  @NonNull
  public final TextView cotrimoxazoleHolder;

  @NonNull
  public final TextView feedingHolder;

  @NonNull
  public final TextView immunizationHolder;

  @NonNull
  public final TextView timeHolder;

  @NonNull
  public final TextView ucHolder;

  private ChildPostnatalExaminationLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull TextView artHolder, @NonNull TextView babyConditionHolder,
      @NonNull TextView babyTempHolder, @NonNull TextView breastfeedingHolder,
      @NonNull TextView breatheHolder, @NonNull TextView cotrimoxazoleHolder,
      @NonNull TextView feedingHolder, @NonNull TextView immunizationHolder,
      @NonNull TextView timeHolder, @NonNull TextView ucHolder) {
    this.rootView = rootView;
    this.artHolder = artHolder;
    this.babyConditionHolder = babyConditionHolder;
    this.babyTempHolder = babyTempHolder;
    this.breastfeedingHolder = breastfeedingHolder;
    this.breatheHolder = breatheHolder;
    this.cotrimoxazoleHolder = cotrimoxazoleHolder;
    this.feedingHolder = feedingHolder;
    this.immunizationHolder = immunizationHolder;
    this.timeHolder = timeHolder;
    this.ucHolder = ucHolder;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChildPostnatalExaminationLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChildPostnatalExaminationLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.child_postnatal_examination_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChildPostnatalExaminationLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.artHolder;
      TextView artHolder = ViewBindings.findChildViewById(rootView, id);
      if (artHolder == null) {
        break missingId;
      }

      id = R.id.babyConditionHolder;
      TextView babyConditionHolder = ViewBindings.findChildViewById(rootView, id);
      if (babyConditionHolder == null) {
        break missingId;
      }

      id = R.id.babyTempHolder;
      TextView babyTempHolder = ViewBindings.findChildViewById(rootView, id);
      if (babyTempHolder == null) {
        break missingId;
      }

      id = R.id.breastfeedingHolder;
      TextView breastfeedingHolder = ViewBindings.findChildViewById(rootView, id);
      if (breastfeedingHolder == null) {
        break missingId;
      }

      id = R.id.breatheHolder;
      TextView breatheHolder = ViewBindings.findChildViewById(rootView, id);
      if (breatheHolder == null) {
        break missingId;
      }

      id = R.id.cotrimoxazoleHolder;
      TextView cotrimoxazoleHolder = ViewBindings.findChildViewById(rootView, id);
      if (cotrimoxazoleHolder == null) {
        break missingId;
      }

      id = R.id.feedingHolder;
      TextView feedingHolder = ViewBindings.findChildViewById(rootView, id);
      if (feedingHolder == null) {
        break missingId;
      }

      id = R.id.immunizationHolder;
      TextView immunizationHolder = ViewBindings.findChildViewById(rootView, id);
      if (immunizationHolder == null) {
        break missingId;
      }

      id = R.id.timeHolder;
      TextView timeHolder = ViewBindings.findChildViewById(rootView, id);
      if (timeHolder == null) {
        break missingId;
      }

      id = R.id.ucHolder;
      TextView ucHolder = ViewBindings.findChildViewById(rootView, id);
      if (ucHolder == null) {
        break missingId;
      }

      return new ChildPostnatalExaminationLayoutBinding((LinearLayout) rootView, artHolder,
          babyConditionHolder, babyTempHolder, breastfeedingHolder, breatheHolder,
          cotrimoxazoleHolder, feedingHolder, immunizationHolder, timeHolder, ucHolder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
