// Generated by view binder compiler. Do not edit!
package com.example.phoenixhomes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.phoenixhomes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DeliveryLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView babyHolder;

  @NonNull
  public final TextView birthLenghtnHolder;

  @NonNull
  public final TextView birthWeightHolder;

  @NonNull
  public final TextView bloodLossHolder;

  @NonNull
  public final TextView conditionOfMotherHolder;

  @NonNull
  public final TextView conductedbyHolder;

  @NonNull
  public final TextView dateHolder;

  @NonNull
  public final TextView deliveryModeHolder;

  @NonNull
  public final TextView eclampsiaHolder;

  @NonNull
  public final TextView fiveMinHolder;

  @NonNull
  public final TextView headCircumferenceHolder;

  @NonNull
  public final TextView hivCounselHolder;

  @NonNull
  public final TextView hivTestedHolder;

  @NonNull
  public final TextView obstructedLaborHolder;

  @NonNull
  public final TextView oneMinHolder;

  @NonNull
  public final TextView oxytocinHolder;

  @NonNull
  public final TextView placeOfDeliveryHolder;

  @NonNull
  public final TextView preeclampsiaHolder;

  @NonNull
  public final TextView rescuscitationHolder;

  @NonNull
  public final TextView tenMinHolder;

  @NonNull
  public final TextView weeksHolder;

  private DeliveryLayoutBinding(@NonNull CardView rootView, @NonNull TextView babyHolder,
      @NonNull TextView birthLenghtnHolder, @NonNull TextView birthWeightHolder,
      @NonNull TextView bloodLossHolder, @NonNull TextView conditionOfMotherHolder,
      @NonNull TextView conductedbyHolder, @NonNull TextView dateHolder,
      @NonNull TextView deliveryModeHolder, @NonNull TextView eclampsiaHolder,
      @NonNull TextView fiveMinHolder, @NonNull TextView headCircumferenceHolder,
      @NonNull TextView hivCounselHolder, @NonNull TextView hivTestedHolder,
      @NonNull TextView obstructedLaborHolder, @NonNull TextView oneMinHolder,
      @NonNull TextView oxytocinHolder, @NonNull TextView placeOfDeliveryHolder,
      @NonNull TextView preeclampsiaHolder, @NonNull TextView rescuscitationHolder,
      @NonNull TextView tenMinHolder, @NonNull TextView weeksHolder) {
    this.rootView = rootView;
    this.babyHolder = babyHolder;
    this.birthLenghtnHolder = birthLenghtnHolder;
    this.birthWeightHolder = birthWeightHolder;
    this.bloodLossHolder = bloodLossHolder;
    this.conditionOfMotherHolder = conditionOfMotherHolder;
    this.conductedbyHolder = conductedbyHolder;
    this.dateHolder = dateHolder;
    this.deliveryModeHolder = deliveryModeHolder;
    this.eclampsiaHolder = eclampsiaHolder;
    this.fiveMinHolder = fiveMinHolder;
    this.headCircumferenceHolder = headCircumferenceHolder;
    this.hivCounselHolder = hivCounselHolder;
    this.hivTestedHolder = hivTestedHolder;
    this.obstructedLaborHolder = obstructedLaborHolder;
    this.oneMinHolder = oneMinHolder;
    this.oxytocinHolder = oxytocinHolder;
    this.placeOfDeliveryHolder = placeOfDeliveryHolder;
    this.preeclampsiaHolder = preeclampsiaHolder;
    this.rescuscitationHolder = rescuscitationHolder;
    this.tenMinHolder = tenMinHolder;
    this.weeksHolder = weeksHolder;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DeliveryLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DeliveryLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.delivery_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DeliveryLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.babyHolder;
      TextView babyHolder = ViewBindings.findChildViewById(rootView, id);
      if (babyHolder == null) {
        break missingId;
      }

      id = R.id.birthLenghtnHolder;
      TextView birthLenghtnHolder = ViewBindings.findChildViewById(rootView, id);
      if (birthLenghtnHolder == null) {
        break missingId;
      }

      id = R.id.birthWeightHolder;
      TextView birthWeightHolder = ViewBindings.findChildViewById(rootView, id);
      if (birthWeightHolder == null) {
        break missingId;
      }

      id = R.id.bloodLossHolder;
      TextView bloodLossHolder = ViewBindings.findChildViewById(rootView, id);
      if (bloodLossHolder == null) {
        break missingId;
      }

      id = R.id.conditionOfMotherHolder;
      TextView conditionOfMotherHolder = ViewBindings.findChildViewById(rootView, id);
      if (conditionOfMotherHolder == null) {
        break missingId;
      }

      id = R.id.conductedbyHolder;
      TextView conductedbyHolder = ViewBindings.findChildViewById(rootView, id);
      if (conductedbyHolder == null) {
        break missingId;
      }

      id = R.id.dateHolder;
      TextView dateHolder = ViewBindings.findChildViewById(rootView, id);
      if (dateHolder == null) {
        break missingId;
      }

      id = R.id.deliveryModeHolder;
      TextView deliveryModeHolder = ViewBindings.findChildViewById(rootView, id);
      if (deliveryModeHolder == null) {
        break missingId;
      }

      id = R.id.eclampsiaHolder;
      TextView eclampsiaHolder = ViewBindings.findChildViewById(rootView, id);
      if (eclampsiaHolder == null) {
        break missingId;
      }

      id = R.id.fiveMinHolder;
      TextView fiveMinHolder = ViewBindings.findChildViewById(rootView, id);
      if (fiveMinHolder == null) {
        break missingId;
      }

      id = R.id.headCircumferenceHolder;
      TextView headCircumferenceHolder = ViewBindings.findChildViewById(rootView, id);
      if (headCircumferenceHolder == null) {
        break missingId;
      }

      id = R.id.hivCounselHolder;
      TextView hivCounselHolder = ViewBindings.findChildViewById(rootView, id);
      if (hivCounselHolder == null) {
        break missingId;
      }

      id = R.id.hivTestedHolder;
      TextView hivTestedHolder = ViewBindings.findChildViewById(rootView, id);
      if (hivTestedHolder == null) {
        break missingId;
      }

      id = R.id.obstructedLaborHolder;
      TextView obstructedLaborHolder = ViewBindings.findChildViewById(rootView, id);
      if (obstructedLaborHolder == null) {
        break missingId;
      }

      id = R.id.oneMinHolder;
      TextView oneMinHolder = ViewBindings.findChildViewById(rootView, id);
      if (oneMinHolder == null) {
        break missingId;
      }

      id = R.id.oxytocinHolder;
      TextView oxytocinHolder = ViewBindings.findChildViewById(rootView, id);
      if (oxytocinHolder == null) {
        break missingId;
      }

      id = R.id.placeOfDeliveryHolder;
      TextView placeOfDeliveryHolder = ViewBindings.findChildViewById(rootView, id);
      if (placeOfDeliveryHolder == null) {
        break missingId;
      }

      id = R.id.preeclampsiaHolder;
      TextView preeclampsiaHolder = ViewBindings.findChildViewById(rootView, id);
      if (preeclampsiaHolder == null) {
        break missingId;
      }

      id = R.id.rescuscitationHolder;
      TextView rescuscitationHolder = ViewBindings.findChildViewById(rootView, id);
      if (rescuscitationHolder == null) {
        break missingId;
      }

      id = R.id.tenMinHolder;
      TextView tenMinHolder = ViewBindings.findChildViewById(rootView, id);
      if (tenMinHolder == null) {
        break missingId;
      }

      id = R.id.weeksHolder;
      TextView weeksHolder = ViewBindings.findChildViewById(rootView, id);
      if (weeksHolder == null) {
        break missingId;
      }

      return new DeliveryLayoutBinding((CardView) rootView, babyHolder, birthLenghtnHolder,
          birthWeightHolder, bloodLossHolder, conditionOfMotherHolder, conductedbyHolder,
          dateHolder, deliveryModeHolder, eclampsiaHolder, fiveMinHolder, headCircumferenceHolder,
          hivCounselHolder, hivTestedHolder, obstructedLaborHolder, oneMinHolder, oxytocinHolder,
          placeOfDeliveryHolder, preeclampsiaHolder, rescuscitationHolder, tenMinHolder,
          weeksHolder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
