// Generated by view binder compiler. Do not edit!
package com.example.phoenixhomes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.phoenixhomes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ReproductiveOrgansLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView dateHolder4;

  @NonNull
  public final TextView examinationHolder4;

  @NonNull
  public final TextView resultsHolder4;

  @NonNull
  public final TextView testHolder4;

  @NonNull
  public final TextView treatmentHolder4;

  private ReproductiveOrgansLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull TextView dateHolder4, @NonNull TextView examinationHolder4,
      @NonNull TextView resultsHolder4, @NonNull TextView testHolder4,
      @NonNull TextView treatmentHolder4) {
    this.rootView = rootView;
    this.dateHolder4 = dateHolder4;
    this.examinationHolder4 = examinationHolder4;
    this.resultsHolder4 = resultsHolder4;
    this.testHolder4 = testHolder4;
    this.treatmentHolder4 = treatmentHolder4;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ReproductiveOrgansLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReproductiveOrgansLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reproductive_organs_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReproductiveOrgansLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dateHolder4;
      TextView dateHolder4 = ViewBindings.findChildViewById(rootView, id);
      if (dateHolder4 == null) {
        break missingId;
      }

      id = R.id.examinationHolder4;
      TextView examinationHolder4 = ViewBindings.findChildViewById(rootView, id);
      if (examinationHolder4 == null) {
        break missingId;
      }

      id = R.id.resultsHolder4;
      TextView resultsHolder4 = ViewBindings.findChildViewById(rootView, id);
      if (resultsHolder4 == null) {
        break missingId;
      }

      id = R.id.testHolder4;
      TextView testHolder4 = ViewBindings.findChildViewById(rootView, id);
      if (testHolder4 == null) {
        break missingId;
      }

      id = R.id.treatmentHolder4;
      TextView treatmentHolder4 = ViewBindings.findChildViewById(rootView, id);
      if (treatmentHolder4 == null) {
        break missingId;
      }

      return new ReproductiveOrgansLayoutBinding((LinearLayout) rootView, dateHolder4,
          examinationHolder4, resultsHolder4, testHolder4, treatmentHolder4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
