// Generated by view binder compiler. Do not edit!
package com.example.phoenixhomes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.phoenixhomes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PresentPregnancyTableDialogTableBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardDoctor;

  @NonNull
  public final EditText foetalHeartHolder1;

  @NonNull
  public final EditText foetalMovtHolder1;

  @NonNull
  public final EditText fundalHeightHolder1;

  @NonNull
  public final EditText lieHolder1;

  @NonNull
  public final EditText maturityHolder1;

  @NonNull
  public final EditText pallorHolder1;

  @NonNull
  public final EditText ppbpHolder1;

  @NonNull
  public final EditText ppdateHolder1;

  @NonNull
  public final EditText pphbHolder1;

  @NonNull
  public final EditText ppnextvisitHolder1;

  @NonNull
  public final EditText ppweightHolder1;

  @NonNull
  public final EditText presentationHolder1;

  @NonNull
  public final AppCompatButton submit;

  @NonNull
  public final EditText urineHolder1;

  @NonNull
  public final EditText visitsHolder1;

  private PresentPregnancyTableDialogTableBinding(@NonNull LinearLayout rootView,
      @NonNull CardView cardDoctor, @NonNull EditText foetalHeartHolder1,
      @NonNull EditText foetalMovtHolder1, @NonNull EditText fundalHeightHolder1,
      @NonNull EditText lieHolder1, @NonNull EditText maturityHolder1,
      @NonNull EditText pallorHolder1, @NonNull EditText ppbpHolder1,
      @NonNull EditText ppdateHolder1, @NonNull EditText pphbHolder1,
      @NonNull EditText ppnextvisitHolder1, @NonNull EditText ppweightHolder1,
      @NonNull EditText presentationHolder1, @NonNull AppCompatButton submit,
      @NonNull EditText urineHolder1, @NonNull EditText visitsHolder1) {
    this.rootView = rootView;
    this.cardDoctor = cardDoctor;
    this.foetalHeartHolder1 = foetalHeartHolder1;
    this.foetalMovtHolder1 = foetalMovtHolder1;
    this.fundalHeightHolder1 = fundalHeightHolder1;
    this.lieHolder1 = lieHolder1;
    this.maturityHolder1 = maturityHolder1;
    this.pallorHolder1 = pallorHolder1;
    this.ppbpHolder1 = ppbpHolder1;
    this.ppdateHolder1 = ppdateHolder1;
    this.pphbHolder1 = pphbHolder1;
    this.ppnextvisitHolder1 = ppnextvisitHolder1;
    this.ppweightHolder1 = ppweightHolder1;
    this.presentationHolder1 = presentationHolder1;
    this.submit = submit;
    this.urineHolder1 = urineHolder1;
    this.visitsHolder1 = visitsHolder1;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PresentPregnancyTableDialogTableBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PresentPregnancyTableDialogTableBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.present_pregnancy_table_dialog_table, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PresentPregnancyTableDialogTableBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_doctor;
      CardView cardDoctor = ViewBindings.findChildViewById(rootView, id);
      if (cardDoctor == null) {
        break missingId;
      }

      id = R.id.foetalHeartHolder1;
      EditText foetalHeartHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (foetalHeartHolder1 == null) {
        break missingId;
      }

      id = R.id.foetalMovtHolder1;
      EditText foetalMovtHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (foetalMovtHolder1 == null) {
        break missingId;
      }

      id = R.id.fundalHeightHolder1;
      EditText fundalHeightHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (fundalHeightHolder1 == null) {
        break missingId;
      }

      id = R.id.lieHolder1;
      EditText lieHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (lieHolder1 == null) {
        break missingId;
      }

      id = R.id.maturityHolder1;
      EditText maturityHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (maturityHolder1 == null) {
        break missingId;
      }

      id = R.id.pallorHolder1;
      EditText pallorHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (pallorHolder1 == null) {
        break missingId;
      }

      id = R.id.ppbpHolder1;
      EditText ppbpHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (ppbpHolder1 == null) {
        break missingId;
      }

      id = R.id.ppdateHolder1;
      EditText ppdateHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (ppdateHolder1 == null) {
        break missingId;
      }

      id = R.id.pphbHolder1;
      EditText pphbHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (pphbHolder1 == null) {
        break missingId;
      }

      id = R.id.ppnextvisitHolder1;
      EditText ppnextvisitHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (ppnextvisitHolder1 == null) {
        break missingId;
      }

      id = R.id.ppweightHolder1;
      EditText ppweightHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (ppweightHolder1 == null) {
        break missingId;
      }

      id = R.id.presentationHolder1;
      EditText presentationHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (presentationHolder1 == null) {
        break missingId;
      }

      id = R.id.submit;
      AppCompatButton submit = ViewBindings.findChildViewById(rootView, id);
      if (submit == null) {
        break missingId;
      }

      id = R.id.urineHolder1;
      EditText urineHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (urineHolder1 == null) {
        break missingId;
      }

      id = R.id.visitsHolder1;
      EditText visitsHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (visitsHolder1 == null) {
        break missingId;
      }

      return new PresentPregnancyTableDialogTableBinding((LinearLayout) rootView, cardDoctor,
          foetalHeartHolder1, foetalMovtHolder1, fundalHeightHolder1, lieHolder1, maturityHolder1,
          pallorHolder1, ppbpHolder1, ppdateHolder1, pphbHolder1, ppnextvisitHolder1,
          ppweightHolder1, presentationHolder1, submit, urineHolder1, visitsHolder1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
