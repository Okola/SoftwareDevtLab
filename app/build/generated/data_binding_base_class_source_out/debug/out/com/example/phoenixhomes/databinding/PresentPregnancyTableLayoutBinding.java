// Generated by view binder compiler. Do not edit!
package com.example.phoenixhomes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TableLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.phoenixhomes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PresentPregnancyTableLayoutBinding implements ViewBinding {
  @NonNull
  private final TableLayout rootView;

  @NonNull
  public final TextView foetalHeartHolder;

  @NonNull
  public final TextView foetalMovtHolder;

  @NonNull
  public final TextView fundalHeightHolder;

  @NonNull
  public final TextView lieHolder;

  @NonNull
  public final TextView maturityHolder;

  @NonNull
  public final TextView pallorHolder;

  @NonNull
  public final TextView ppbpHolder;

  @NonNull
  public final TextView ppdateHolder;

  @NonNull
  public final TextView pphbHolder;

  @NonNull
  public final TextView ppnextvisitHolder;

  @NonNull
  public final TextView ppweightHolder;

  @NonNull
  public final TextView presentationHolder;

  @NonNull
  public final TextView urineHolder;

  @NonNull
  public final TextView visitsHolder;

  private PresentPregnancyTableLayoutBinding(@NonNull TableLayout rootView,
      @NonNull TextView foetalHeartHolder, @NonNull TextView foetalMovtHolder,
      @NonNull TextView fundalHeightHolder, @NonNull TextView lieHolder,
      @NonNull TextView maturityHolder, @NonNull TextView pallorHolder,
      @NonNull TextView ppbpHolder, @NonNull TextView ppdateHolder, @NonNull TextView pphbHolder,
      @NonNull TextView ppnextvisitHolder, @NonNull TextView ppweightHolder,
      @NonNull TextView presentationHolder, @NonNull TextView urineHolder,
      @NonNull TextView visitsHolder) {
    this.rootView = rootView;
    this.foetalHeartHolder = foetalHeartHolder;
    this.foetalMovtHolder = foetalMovtHolder;
    this.fundalHeightHolder = fundalHeightHolder;
    this.lieHolder = lieHolder;
    this.maturityHolder = maturityHolder;
    this.pallorHolder = pallorHolder;
    this.ppbpHolder = ppbpHolder;
    this.ppdateHolder = ppdateHolder;
    this.pphbHolder = pphbHolder;
    this.ppnextvisitHolder = ppnextvisitHolder;
    this.ppweightHolder = ppweightHolder;
    this.presentationHolder = presentationHolder;
    this.urineHolder = urineHolder;
    this.visitsHolder = visitsHolder;
  }

  @Override
  @NonNull
  public TableLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PresentPregnancyTableLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PresentPregnancyTableLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.present_pregnancy_table_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PresentPregnancyTableLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.foetalHeartHolder;
      TextView foetalHeartHolder = ViewBindings.findChildViewById(rootView, id);
      if (foetalHeartHolder == null) {
        break missingId;
      }

      id = R.id.foetalMovtHolder;
      TextView foetalMovtHolder = ViewBindings.findChildViewById(rootView, id);
      if (foetalMovtHolder == null) {
        break missingId;
      }

      id = R.id.fundalHeightHolder;
      TextView fundalHeightHolder = ViewBindings.findChildViewById(rootView, id);
      if (fundalHeightHolder == null) {
        break missingId;
      }

      id = R.id.lieHolder;
      TextView lieHolder = ViewBindings.findChildViewById(rootView, id);
      if (lieHolder == null) {
        break missingId;
      }

      id = R.id.maturityHolder;
      TextView maturityHolder = ViewBindings.findChildViewById(rootView, id);
      if (maturityHolder == null) {
        break missingId;
      }

      id = R.id.pallorHolder;
      TextView pallorHolder = ViewBindings.findChildViewById(rootView, id);
      if (pallorHolder == null) {
        break missingId;
      }

      id = R.id.ppbpHolder;
      TextView ppbpHolder = ViewBindings.findChildViewById(rootView, id);
      if (ppbpHolder == null) {
        break missingId;
      }

      id = R.id.ppdateHolder;
      TextView ppdateHolder = ViewBindings.findChildViewById(rootView, id);
      if (ppdateHolder == null) {
        break missingId;
      }

      id = R.id.pphbHolder;
      TextView pphbHolder = ViewBindings.findChildViewById(rootView, id);
      if (pphbHolder == null) {
        break missingId;
      }

      id = R.id.ppnextvisitHolder;
      TextView ppnextvisitHolder = ViewBindings.findChildViewById(rootView, id);
      if (ppnextvisitHolder == null) {
        break missingId;
      }

      id = R.id.ppweightHolder;
      TextView ppweightHolder = ViewBindings.findChildViewById(rootView, id);
      if (ppweightHolder == null) {
        break missingId;
      }

      id = R.id.presentationHolder;
      TextView presentationHolder = ViewBindings.findChildViewById(rootView, id);
      if (presentationHolder == null) {
        break missingId;
      }

      id = R.id.urineHolder;
      TextView urineHolder = ViewBindings.findChildViewById(rootView, id);
      if (urineHolder == null) {
        break missingId;
      }

      id = R.id.visitsHolder;
      TextView visitsHolder = ViewBindings.findChildViewById(rootView, id);
      if (visitsHolder == null) {
        break missingId;
      }

      return new PresentPregnancyTableLayoutBinding((TableLayout) rootView, foetalHeartHolder,
          foetalMovtHolder, fundalHeightHolder, lieHolder, maturityHolder, pallorHolder, ppbpHolder,
          ppdateHolder, pphbHolder, ppnextvisitHolder, ppweightHolder, presentationHolder,
          urineHolder, visitsHolder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
