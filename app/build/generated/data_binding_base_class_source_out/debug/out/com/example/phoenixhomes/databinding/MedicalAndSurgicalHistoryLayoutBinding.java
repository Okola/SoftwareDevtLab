// Generated by view binder compiler. Do not edit!
package com.example.phoenixhomes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.phoenixhomes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MedicalAndSurgicalHistoryLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView allergyHolder;

  @NonNull
  public final TextView bloodTransfusionHolder;

  @NonNull
  public final TextView diabetesHolder;

  @NonNull
  public final TextView hyperTensionHolder;

  @NonNull
  public final TextView otherHolder;

  @NonNull
  public final TextView surgicalOperationHolder;

  @NonNull
  public final TextView tbHolder;

  @NonNull
  public final TextView tuberculosisHolder;

  @NonNull
  public final TextView twinsHolder;

  private MedicalAndSurgicalHistoryLayoutBinding(@NonNull CardView rootView,
      @NonNull TextView allergyHolder, @NonNull TextView bloodTransfusionHolder,
      @NonNull TextView diabetesHolder, @NonNull TextView hyperTensionHolder,
      @NonNull TextView otherHolder, @NonNull TextView surgicalOperationHolder,
      @NonNull TextView tbHolder, @NonNull TextView tuberculosisHolder,
      @NonNull TextView twinsHolder) {
    this.rootView = rootView;
    this.allergyHolder = allergyHolder;
    this.bloodTransfusionHolder = bloodTransfusionHolder;
    this.diabetesHolder = diabetesHolder;
    this.hyperTensionHolder = hyperTensionHolder;
    this.otherHolder = otherHolder;
    this.surgicalOperationHolder = surgicalOperationHolder;
    this.tbHolder = tbHolder;
    this.tuberculosisHolder = tuberculosisHolder;
    this.twinsHolder = twinsHolder;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static MedicalAndSurgicalHistoryLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MedicalAndSurgicalHistoryLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.medical_and_surgical_history_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MedicalAndSurgicalHistoryLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.allergyHolder;
      TextView allergyHolder = ViewBindings.findChildViewById(rootView, id);
      if (allergyHolder == null) {
        break missingId;
      }

      id = R.id.bloodTransfusionHolder;
      TextView bloodTransfusionHolder = ViewBindings.findChildViewById(rootView, id);
      if (bloodTransfusionHolder == null) {
        break missingId;
      }

      id = R.id.diabetesHolder;
      TextView diabetesHolder = ViewBindings.findChildViewById(rootView, id);
      if (diabetesHolder == null) {
        break missingId;
      }

      id = R.id.hyperTensionHolder;
      TextView hyperTensionHolder = ViewBindings.findChildViewById(rootView, id);
      if (hyperTensionHolder == null) {
        break missingId;
      }

      id = R.id.otherHolder;
      TextView otherHolder = ViewBindings.findChildViewById(rootView, id);
      if (otherHolder == null) {
        break missingId;
      }

      id = R.id.surgicalOperationHolder;
      TextView surgicalOperationHolder = ViewBindings.findChildViewById(rootView, id);
      if (surgicalOperationHolder == null) {
        break missingId;
      }

      id = R.id.tbHolder;
      TextView tbHolder = ViewBindings.findChildViewById(rootView, id);
      if (tbHolder == null) {
        break missingId;
      }

      id = R.id.tuberculosisHolder;
      TextView tuberculosisHolder = ViewBindings.findChildViewById(rootView, id);
      if (tuberculosisHolder == null) {
        break missingId;
      }

      id = R.id.twinsHolder;
      TextView twinsHolder = ViewBindings.findChildViewById(rootView, id);
      if (twinsHolder == null) {
        break missingId;
      }

      return new MedicalAndSurgicalHistoryLayoutBinding((CardView) rootView, allergyHolder,
          bloodTransfusionHolder, diabetesHolder, hyperTensionHolder, otherHolder,
          surgicalOperationHolder, tbHolder, tuberculosisHolder, twinsHolder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
