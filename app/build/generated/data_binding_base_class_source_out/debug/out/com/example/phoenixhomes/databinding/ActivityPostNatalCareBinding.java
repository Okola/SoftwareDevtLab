// Generated by view binder compiler. Do not edit!
package com.example.phoenixhomes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.phoenixhomes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPostNatalCareBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final CardView InfantFeedingCard;

  @NonNull
  public final CardView WeightGainCard;

  @NonNull
  public final CardView antenatalProfile;

  @NonNull
  public final CardView clinicalNotesCard;

  @NonNull
  public final CardView deliveryCard;

  @NonNull
  public final CardView familyPlanningCard;

  @NonNull
  public final CardView maternalProfileCard;

  @NonNull
  public final CardView medicalAndSurgicalHistory;

  @NonNull
  public final CardView physicalExaminationCard;

  @NonNull
  public final CardView postNatalExaminationCard;

  @NonNull
  public final CardView presentPregnancyCard;

  @NonNull
  public final CardView preventiveServicesCard;

  @NonNull
  public final CardView previousPregnancy;

  @NonNull
  public final CardView reproductiveOrgansCard;

  private ActivityPostNatalCareBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull CardView InfantFeedingCard, @NonNull CardView WeightGainCard,
      @NonNull CardView antenatalProfile, @NonNull CardView clinicalNotesCard,
      @NonNull CardView deliveryCard, @NonNull CardView familyPlanningCard,
      @NonNull CardView maternalProfileCard, @NonNull CardView medicalAndSurgicalHistory,
      @NonNull CardView physicalExaminationCard, @NonNull CardView postNatalExaminationCard,
      @NonNull CardView presentPregnancyCard, @NonNull CardView preventiveServicesCard,
      @NonNull CardView previousPregnancy, @NonNull CardView reproductiveOrgansCard) {
    this.rootView = rootView;
    this.InfantFeedingCard = InfantFeedingCard;
    this.WeightGainCard = WeightGainCard;
    this.antenatalProfile = antenatalProfile;
    this.clinicalNotesCard = clinicalNotesCard;
    this.deliveryCard = deliveryCard;
    this.familyPlanningCard = familyPlanningCard;
    this.maternalProfileCard = maternalProfileCard;
    this.medicalAndSurgicalHistory = medicalAndSurgicalHistory;
    this.physicalExaminationCard = physicalExaminationCard;
    this.postNatalExaminationCard = postNatalExaminationCard;
    this.presentPregnancyCard = presentPregnancyCard;
    this.preventiveServicesCard = preventiveServicesCard;
    this.previousPregnancy = previousPregnancy;
    this.reproductiveOrgansCard = reproductiveOrgansCard;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPostNatalCareBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPostNatalCareBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_post_natal_care, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPostNatalCareBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.InfantFeedingCard;
      CardView InfantFeedingCard = ViewBindings.findChildViewById(rootView, id);
      if (InfantFeedingCard == null) {
        break missingId;
      }

      id = R.id.WeightGainCard;
      CardView WeightGainCard = ViewBindings.findChildViewById(rootView, id);
      if (WeightGainCard == null) {
        break missingId;
      }

      id = R.id.antenatalProfile;
      CardView antenatalProfile = ViewBindings.findChildViewById(rootView, id);
      if (antenatalProfile == null) {
        break missingId;
      }

      id = R.id.clinicalNotesCard;
      CardView clinicalNotesCard = ViewBindings.findChildViewById(rootView, id);
      if (clinicalNotesCard == null) {
        break missingId;
      }

      id = R.id.deliveryCard;
      CardView deliveryCard = ViewBindings.findChildViewById(rootView, id);
      if (deliveryCard == null) {
        break missingId;
      }

      id = R.id.familyPlanningCard;
      CardView familyPlanningCard = ViewBindings.findChildViewById(rootView, id);
      if (familyPlanningCard == null) {
        break missingId;
      }

      id = R.id.maternalProfileCard;
      CardView maternalProfileCard = ViewBindings.findChildViewById(rootView, id);
      if (maternalProfileCard == null) {
        break missingId;
      }

      id = R.id.medicalAndSurgicalHistory;
      CardView medicalAndSurgicalHistory = ViewBindings.findChildViewById(rootView, id);
      if (medicalAndSurgicalHistory == null) {
        break missingId;
      }

      id = R.id.physicalExaminationCard;
      CardView physicalExaminationCard = ViewBindings.findChildViewById(rootView, id);
      if (physicalExaminationCard == null) {
        break missingId;
      }

      id = R.id.postNatalExaminationCard;
      CardView postNatalExaminationCard = ViewBindings.findChildViewById(rootView, id);
      if (postNatalExaminationCard == null) {
        break missingId;
      }

      id = R.id.presentPregnancyCard;
      CardView presentPregnancyCard = ViewBindings.findChildViewById(rootView, id);
      if (presentPregnancyCard == null) {
        break missingId;
      }

      id = R.id.preventiveServicesCard;
      CardView preventiveServicesCard = ViewBindings.findChildViewById(rootView, id);
      if (preventiveServicesCard == null) {
        break missingId;
      }

      id = R.id.previousPregnancy;
      CardView previousPregnancy = ViewBindings.findChildViewById(rootView, id);
      if (previousPregnancy == null) {
        break missingId;
      }

      id = R.id.reproductiveOrgansCard;
      CardView reproductiveOrgansCard = ViewBindings.findChildViewById(rootView, id);
      if (reproductiveOrgansCard == null) {
        break missingId;
      }

      return new ActivityPostNatalCareBinding((LinearLayoutCompat) rootView, InfantFeedingCard,
          WeightGainCard, antenatalProfile, clinicalNotesCard, deliveryCard, familyPlanningCard,
          maternalProfileCard, medicalAndSurgicalHistory, physicalExaminationCard,
          postNatalExaminationCard, presentPregnancyCard, preventiveServicesCard, previousPregnancy,
          reproductiveOrgansCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
