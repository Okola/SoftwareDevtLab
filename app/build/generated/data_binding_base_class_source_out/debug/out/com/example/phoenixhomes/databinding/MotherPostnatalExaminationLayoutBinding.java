// Generated by view binder compiler. Do not edit!
package com.example.phoenixhomes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.phoenixhomes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MotherPostnatalExaminationLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView BreastHolder;

  @NonNull
  public final TextView HaemoglobinHolder;

  @NonNull
  public final TextView PulseHolder;

  @NonNull
  public final TextView TempHolder;

  @NonNull
  public final TextView bpHolder;

  @NonNull
  public final TextView counsellingHolder;

  @NonNull
  public final TextView cscscarHolder;

  @NonNull
  public final TextView dateHolder;

  @NonNull
  public final TextView espisiotomyHolder;

  @NonNull
  public final TextView fpHolder;

  @NonNull
  public final TextView gcHolder;

  @NonNull
  public final TextView haartHolder;

  @NonNull
  public final TextView hivRetestingHolder;

  @NonNull
  public final TextView hivStatusHolder;

  @NonNull
  public final TextView lochiaHolder;

  @NonNull
  public final TextView peHolder;

  @NonNull
  public final TextView prophylaxisHolder;

  @NonNull
  public final TextView rrHolder;

  @NonNull
  public final TextView timeHolder;

  @NonNull
  public final TextView uterusHolder;

  @NonNull
  public final TextView veHolder;

  private MotherPostnatalExaminationLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull TextView BreastHolder, @NonNull TextView HaemoglobinHolder,
      @NonNull TextView PulseHolder, @NonNull TextView TempHolder, @NonNull TextView bpHolder,
      @NonNull TextView counsellingHolder, @NonNull TextView cscscarHolder,
      @NonNull TextView dateHolder, @NonNull TextView espisiotomyHolder, @NonNull TextView fpHolder,
      @NonNull TextView gcHolder, @NonNull TextView haartHolder,
      @NonNull TextView hivRetestingHolder, @NonNull TextView hivStatusHolder,
      @NonNull TextView lochiaHolder, @NonNull TextView peHolder,
      @NonNull TextView prophylaxisHolder, @NonNull TextView rrHolder, @NonNull TextView timeHolder,
      @NonNull TextView uterusHolder, @NonNull TextView veHolder) {
    this.rootView = rootView;
    this.BreastHolder = BreastHolder;
    this.HaemoglobinHolder = HaemoglobinHolder;
    this.PulseHolder = PulseHolder;
    this.TempHolder = TempHolder;
    this.bpHolder = bpHolder;
    this.counsellingHolder = counsellingHolder;
    this.cscscarHolder = cscscarHolder;
    this.dateHolder = dateHolder;
    this.espisiotomyHolder = espisiotomyHolder;
    this.fpHolder = fpHolder;
    this.gcHolder = gcHolder;
    this.haartHolder = haartHolder;
    this.hivRetestingHolder = hivRetestingHolder;
    this.hivStatusHolder = hivStatusHolder;
    this.lochiaHolder = lochiaHolder;
    this.peHolder = peHolder;
    this.prophylaxisHolder = prophylaxisHolder;
    this.rrHolder = rrHolder;
    this.timeHolder = timeHolder;
    this.uterusHolder = uterusHolder;
    this.veHolder = veHolder;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MotherPostnatalExaminationLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MotherPostnatalExaminationLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.mother_postnatal_examination_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MotherPostnatalExaminationLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.BreastHolder;
      TextView BreastHolder = ViewBindings.findChildViewById(rootView, id);
      if (BreastHolder == null) {
        break missingId;
      }

      id = R.id.HaemoglobinHolder;
      TextView HaemoglobinHolder = ViewBindings.findChildViewById(rootView, id);
      if (HaemoglobinHolder == null) {
        break missingId;
      }

      id = R.id.PulseHolder;
      TextView PulseHolder = ViewBindings.findChildViewById(rootView, id);
      if (PulseHolder == null) {
        break missingId;
      }

      id = R.id.TempHolder;
      TextView TempHolder = ViewBindings.findChildViewById(rootView, id);
      if (TempHolder == null) {
        break missingId;
      }

      id = R.id.bpHolder;
      TextView bpHolder = ViewBindings.findChildViewById(rootView, id);
      if (bpHolder == null) {
        break missingId;
      }

      id = R.id.counsellingHolder;
      TextView counsellingHolder = ViewBindings.findChildViewById(rootView, id);
      if (counsellingHolder == null) {
        break missingId;
      }

      id = R.id.cscscarHolder;
      TextView cscscarHolder = ViewBindings.findChildViewById(rootView, id);
      if (cscscarHolder == null) {
        break missingId;
      }

      id = R.id.dateHolder;
      TextView dateHolder = ViewBindings.findChildViewById(rootView, id);
      if (dateHolder == null) {
        break missingId;
      }

      id = R.id.espisiotomyHolder;
      TextView espisiotomyHolder = ViewBindings.findChildViewById(rootView, id);
      if (espisiotomyHolder == null) {
        break missingId;
      }

      id = R.id.fpHolder;
      TextView fpHolder = ViewBindings.findChildViewById(rootView, id);
      if (fpHolder == null) {
        break missingId;
      }

      id = R.id.gcHolder;
      TextView gcHolder = ViewBindings.findChildViewById(rootView, id);
      if (gcHolder == null) {
        break missingId;
      }

      id = R.id.haartHolder;
      TextView haartHolder = ViewBindings.findChildViewById(rootView, id);
      if (haartHolder == null) {
        break missingId;
      }

      id = R.id.hivRetestingHolder;
      TextView hivRetestingHolder = ViewBindings.findChildViewById(rootView, id);
      if (hivRetestingHolder == null) {
        break missingId;
      }

      id = R.id.hivStatusHolder;
      TextView hivStatusHolder = ViewBindings.findChildViewById(rootView, id);
      if (hivStatusHolder == null) {
        break missingId;
      }

      id = R.id.lochiaHolder;
      TextView lochiaHolder = ViewBindings.findChildViewById(rootView, id);
      if (lochiaHolder == null) {
        break missingId;
      }

      id = R.id.peHolder;
      TextView peHolder = ViewBindings.findChildViewById(rootView, id);
      if (peHolder == null) {
        break missingId;
      }

      id = R.id.prophylaxisHolder;
      TextView prophylaxisHolder = ViewBindings.findChildViewById(rootView, id);
      if (prophylaxisHolder == null) {
        break missingId;
      }

      id = R.id.rrHolder;
      TextView rrHolder = ViewBindings.findChildViewById(rootView, id);
      if (rrHolder == null) {
        break missingId;
      }

      id = R.id.timeHolder;
      TextView timeHolder = ViewBindings.findChildViewById(rootView, id);
      if (timeHolder == null) {
        break missingId;
      }

      id = R.id.uterusHolder;
      TextView uterusHolder = ViewBindings.findChildViewById(rootView, id);
      if (uterusHolder == null) {
        break missingId;
      }

      id = R.id.veHolder;
      TextView veHolder = ViewBindings.findChildViewById(rootView, id);
      if (veHolder == null) {
        break missingId;
      }

      return new MotherPostnatalExaminationLayoutBinding((LinearLayout) rootView, BreastHolder,
          HaemoglobinHolder, PulseHolder, TempHolder, bpHolder, counsellingHolder, cscscarHolder,
          dateHolder, espisiotomyHolder, fpHolder, gcHolder, haartHolder, hivRetestingHolder,
          hivStatusHolder, lochiaHolder, peHolder, prophylaxisHolder, rrHolder, timeHolder,
          uterusHolder, veHolder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
