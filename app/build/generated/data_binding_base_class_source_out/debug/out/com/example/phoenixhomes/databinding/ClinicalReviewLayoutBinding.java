// Generated by view binder compiler. Do not edit!
package com.example.phoenixhomes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.phoenixhomes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ClinicalReviewLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView HBHolder;

  @NonNull
  public final TextView abdomenHolder;

  @NonNull
  public final TextView ageAtFirstContactHolder;

  @NonNull
  public final TextView anusHolder;

  @NonNull
  public final TextView armsAndHandsHolder;

  @NonNull
  public final TextView chestHolder;

  @NonNull
  public final TextView colourationHolder;

  @NonNull
  public final TextView earsHolder;

  @NonNull
  public final TextView eyesHolder;

  @NonNull
  public final TextView fathersNameHolder;

  @NonNull
  public final TextView genitaliaHolder;

  @NonNull
  public final TextView headCircumferenceHolder;

  @NonNull
  public final TextView heartHolder;

  @NonNull
  public final TextView legsAndFeetHolder;

  @NonNull
  public final TextView lenghtorheightHolder;

  @NonNull
  public final TextView mouthHolder;

  @NonNull
  public final TextView physicalFeaturesHolder;

  @NonNull
  public final TextView spineHolder;

  @NonNull
  public final TextView umblicalHolder;

  @NonNull
  public final TextView weightInKgNoHolder;

  private ClinicalReviewLayoutBinding(@NonNull CardView rootView, @NonNull TextView HBHolder,
      @NonNull TextView abdomenHolder, @NonNull TextView ageAtFirstContactHolder,
      @NonNull TextView anusHolder, @NonNull TextView armsAndHandsHolder,
      @NonNull TextView chestHolder, @NonNull TextView colourationHolder,
      @NonNull TextView earsHolder, @NonNull TextView eyesHolder,
      @NonNull TextView fathersNameHolder, @NonNull TextView genitaliaHolder,
      @NonNull TextView headCircumferenceHolder, @NonNull TextView heartHolder,
      @NonNull TextView legsAndFeetHolder, @NonNull TextView lenghtorheightHolder,
      @NonNull TextView mouthHolder, @NonNull TextView physicalFeaturesHolder,
      @NonNull TextView spineHolder, @NonNull TextView umblicalHolder,
      @NonNull TextView weightInKgNoHolder) {
    this.rootView = rootView;
    this.HBHolder = HBHolder;
    this.abdomenHolder = abdomenHolder;
    this.ageAtFirstContactHolder = ageAtFirstContactHolder;
    this.anusHolder = anusHolder;
    this.armsAndHandsHolder = armsAndHandsHolder;
    this.chestHolder = chestHolder;
    this.colourationHolder = colourationHolder;
    this.earsHolder = earsHolder;
    this.eyesHolder = eyesHolder;
    this.fathersNameHolder = fathersNameHolder;
    this.genitaliaHolder = genitaliaHolder;
    this.headCircumferenceHolder = headCircumferenceHolder;
    this.heartHolder = heartHolder;
    this.legsAndFeetHolder = legsAndFeetHolder;
    this.lenghtorheightHolder = lenghtorheightHolder;
    this.mouthHolder = mouthHolder;
    this.physicalFeaturesHolder = physicalFeaturesHolder;
    this.spineHolder = spineHolder;
    this.umblicalHolder = umblicalHolder;
    this.weightInKgNoHolder = weightInKgNoHolder;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ClinicalReviewLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ClinicalReviewLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.clinical_review_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ClinicalReviewLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.HBHolder;
      TextView HBHolder = ViewBindings.findChildViewById(rootView, id);
      if (HBHolder == null) {
        break missingId;
      }

      id = R.id.abdomenHolder;
      TextView abdomenHolder = ViewBindings.findChildViewById(rootView, id);
      if (abdomenHolder == null) {
        break missingId;
      }

      id = R.id.ageAtFirstContactHolder;
      TextView ageAtFirstContactHolder = ViewBindings.findChildViewById(rootView, id);
      if (ageAtFirstContactHolder == null) {
        break missingId;
      }

      id = R.id.anusHolder;
      TextView anusHolder = ViewBindings.findChildViewById(rootView, id);
      if (anusHolder == null) {
        break missingId;
      }

      id = R.id.armsAndHandsHolder;
      TextView armsAndHandsHolder = ViewBindings.findChildViewById(rootView, id);
      if (armsAndHandsHolder == null) {
        break missingId;
      }

      id = R.id.chestHolder;
      TextView chestHolder = ViewBindings.findChildViewById(rootView, id);
      if (chestHolder == null) {
        break missingId;
      }

      id = R.id.colourationHolder;
      TextView colourationHolder = ViewBindings.findChildViewById(rootView, id);
      if (colourationHolder == null) {
        break missingId;
      }

      id = R.id.earsHolder;
      TextView earsHolder = ViewBindings.findChildViewById(rootView, id);
      if (earsHolder == null) {
        break missingId;
      }

      id = R.id.eyesHolder;
      TextView eyesHolder = ViewBindings.findChildViewById(rootView, id);
      if (eyesHolder == null) {
        break missingId;
      }

      id = R.id.fathersNameHolder;
      TextView fathersNameHolder = ViewBindings.findChildViewById(rootView, id);
      if (fathersNameHolder == null) {
        break missingId;
      }

      id = R.id.genitaliaHolder;
      TextView genitaliaHolder = ViewBindings.findChildViewById(rootView, id);
      if (genitaliaHolder == null) {
        break missingId;
      }

      id = R.id.headCircumferenceHolder;
      TextView headCircumferenceHolder = ViewBindings.findChildViewById(rootView, id);
      if (headCircumferenceHolder == null) {
        break missingId;
      }

      id = R.id.heartHolder;
      TextView heartHolder = ViewBindings.findChildViewById(rootView, id);
      if (heartHolder == null) {
        break missingId;
      }

      id = R.id.legsAndFeetHolder;
      TextView legsAndFeetHolder = ViewBindings.findChildViewById(rootView, id);
      if (legsAndFeetHolder == null) {
        break missingId;
      }

      id = R.id.lenghtorheightHolder;
      TextView lenghtorheightHolder = ViewBindings.findChildViewById(rootView, id);
      if (lenghtorheightHolder == null) {
        break missingId;
      }

      id = R.id.mouthHolder;
      TextView mouthHolder = ViewBindings.findChildViewById(rootView, id);
      if (mouthHolder == null) {
        break missingId;
      }

      id = R.id.physicalFeaturesHolder;
      TextView physicalFeaturesHolder = ViewBindings.findChildViewById(rootView, id);
      if (physicalFeaturesHolder == null) {
        break missingId;
      }

      id = R.id.spineHolder;
      TextView spineHolder = ViewBindings.findChildViewById(rootView, id);
      if (spineHolder == null) {
        break missingId;
      }

      id = R.id.umblicalHolder;
      TextView umblicalHolder = ViewBindings.findChildViewById(rootView, id);
      if (umblicalHolder == null) {
        break missingId;
      }

      id = R.id.weightInKgNoHolder;
      TextView weightInKgNoHolder = ViewBindings.findChildViewById(rootView, id);
      if (weightInKgNoHolder == null) {
        break missingId;
      }

      return new ClinicalReviewLayoutBinding((CardView) rootView, HBHolder, abdomenHolder,
          ageAtFirstContactHolder, anusHolder, armsAndHandsHolder, chestHolder, colourationHolder,
          earsHolder, eyesHolder, fathersNameHolder, genitaliaHolder, headCircumferenceHolder,
          heartHolder, legsAndFeetHolder, lenghtorheightHolder, mouthHolder, physicalFeaturesHolder,
          spineHolder, umblicalHolder, weightInKgNoHolder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
