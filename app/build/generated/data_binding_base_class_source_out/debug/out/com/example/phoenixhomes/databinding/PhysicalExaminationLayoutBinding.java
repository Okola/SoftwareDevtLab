// Generated by view binder compiler. Do not edit!
package com.example.phoenixhomes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.phoenixhomes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PhysicalExaminationLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView abdomenHolder;

  @NonNull
  public final TextView bpHolder;

  @NonNull
  public final TextView breastsHolder;

  @NonNull
  public final TextView cvsHolder;

  @NonNull
  public final TextView dischargeHolder;

  @NonNull
  public final TextView generalHolder;

  @NonNull
  public final TextView heightHolder;

  @NonNull
  public final TextView respHolder;

  @NonNull
  public final TextView virginalHolder;

  private PhysicalExaminationLayoutBinding(@NonNull CardView rootView,
      @NonNull TextView abdomenHolder, @NonNull TextView bpHolder, @NonNull TextView breastsHolder,
      @NonNull TextView cvsHolder, @NonNull TextView dischargeHolder,
      @NonNull TextView generalHolder, @NonNull TextView heightHolder, @NonNull TextView respHolder,
      @NonNull TextView virginalHolder) {
    this.rootView = rootView;
    this.abdomenHolder = abdomenHolder;
    this.bpHolder = bpHolder;
    this.breastsHolder = breastsHolder;
    this.cvsHolder = cvsHolder;
    this.dischargeHolder = dischargeHolder;
    this.generalHolder = generalHolder;
    this.heightHolder = heightHolder;
    this.respHolder = respHolder;
    this.virginalHolder = virginalHolder;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static PhysicalExaminationLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PhysicalExaminationLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.physical_examination_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PhysicalExaminationLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.abdomenHolder;
      TextView abdomenHolder = ViewBindings.findChildViewById(rootView, id);
      if (abdomenHolder == null) {
        break missingId;
      }

      id = R.id.bpHolder;
      TextView bpHolder = ViewBindings.findChildViewById(rootView, id);
      if (bpHolder == null) {
        break missingId;
      }

      id = R.id.breastsHolder;
      TextView breastsHolder = ViewBindings.findChildViewById(rootView, id);
      if (breastsHolder == null) {
        break missingId;
      }

      id = R.id.cvsHolder;
      TextView cvsHolder = ViewBindings.findChildViewById(rootView, id);
      if (cvsHolder == null) {
        break missingId;
      }

      id = R.id.dischargeHolder;
      TextView dischargeHolder = ViewBindings.findChildViewById(rootView, id);
      if (dischargeHolder == null) {
        break missingId;
      }

      id = R.id.generalHolder;
      TextView generalHolder = ViewBindings.findChildViewById(rootView, id);
      if (generalHolder == null) {
        break missingId;
      }

      id = R.id.heightHolder;
      TextView heightHolder = ViewBindings.findChildViewById(rootView, id);
      if (heightHolder == null) {
        break missingId;
      }

      id = R.id.respHolder;
      TextView respHolder = ViewBindings.findChildViewById(rootView, id);
      if (respHolder == null) {
        break missingId;
      }

      id = R.id.virginalHolder;
      TextView virginalHolder = ViewBindings.findChildViewById(rootView, id);
      if (virginalHolder == null) {
        break missingId;
      }

      return new PhysicalExaminationLayoutBinding((CardView) rootView, abdomenHolder, bpHolder,
          breastsHolder, cvsHolder, dischargeHolder, generalHolder, heightHolder, respHolder,
          virginalHolder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
