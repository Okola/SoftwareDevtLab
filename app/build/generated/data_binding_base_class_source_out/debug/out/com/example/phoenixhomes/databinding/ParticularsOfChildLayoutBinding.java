// Generated by view binder compiler. Do not edit!
package com.example.phoenixhomes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.phoenixhomes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ParticularsOfChildLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView DOBHolder;

  @NonNull
  public final TextView birthOrderHolder;

  @NonNull
  public final TextView birthlengthHolder;

  @NonNull
  public final TextView birthweightHolder;

  @NonNull
  public final TextView childGenderHolder;

  @NonNull
  public final TextView childNameHolder;

  @NonNull
  public final TextView dateHolder;

  @NonNull
  public final TextView gestationHolder;

  @NonNull
  public final TextView xticsHolder;

  private ParticularsOfChildLayoutBinding(@NonNull CardView rootView, @NonNull TextView DOBHolder,
      @NonNull TextView birthOrderHolder, @NonNull TextView birthlengthHolder,
      @NonNull TextView birthweightHolder, @NonNull TextView childGenderHolder,
      @NonNull TextView childNameHolder, @NonNull TextView dateHolder,
      @NonNull TextView gestationHolder, @NonNull TextView xticsHolder) {
    this.rootView = rootView;
    this.DOBHolder = DOBHolder;
    this.birthOrderHolder = birthOrderHolder;
    this.birthlengthHolder = birthlengthHolder;
    this.birthweightHolder = birthweightHolder;
    this.childGenderHolder = childGenderHolder;
    this.childNameHolder = childNameHolder;
    this.dateHolder = dateHolder;
    this.gestationHolder = gestationHolder;
    this.xticsHolder = xticsHolder;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ParticularsOfChildLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ParticularsOfChildLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.particulars_of_child_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ParticularsOfChildLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DOBHolder;
      TextView DOBHolder = ViewBindings.findChildViewById(rootView, id);
      if (DOBHolder == null) {
        break missingId;
      }

      id = R.id.birthOrderHolder;
      TextView birthOrderHolder = ViewBindings.findChildViewById(rootView, id);
      if (birthOrderHolder == null) {
        break missingId;
      }

      id = R.id.birthlengthHolder;
      TextView birthlengthHolder = ViewBindings.findChildViewById(rootView, id);
      if (birthlengthHolder == null) {
        break missingId;
      }

      id = R.id.birthweightHolder;
      TextView birthweightHolder = ViewBindings.findChildViewById(rootView, id);
      if (birthweightHolder == null) {
        break missingId;
      }

      id = R.id.childGenderHolder;
      TextView childGenderHolder = ViewBindings.findChildViewById(rootView, id);
      if (childGenderHolder == null) {
        break missingId;
      }

      id = R.id.childNameHolder;
      TextView childNameHolder = ViewBindings.findChildViewById(rootView, id);
      if (childNameHolder == null) {
        break missingId;
      }

      id = R.id.dateHolder;
      TextView dateHolder = ViewBindings.findChildViewById(rootView, id);
      if (dateHolder == null) {
        break missingId;
      }

      id = R.id.gestationHolder;
      TextView gestationHolder = ViewBindings.findChildViewById(rootView, id);
      if (gestationHolder == null) {
        break missingId;
      }

      id = R.id.xticsHolder;
      TextView xticsHolder = ViewBindings.findChildViewById(rootView, id);
      if (xticsHolder == null) {
        break missingId;
      }

      return new ParticularsOfChildLayoutBinding((CardView) rootView, DOBHolder, birthOrderHolder,
          birthlengthHolder, birthweightHolder, childGenderHolder, childNameHolder, dateHolder,
          gestationHolder, xticsHolder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
