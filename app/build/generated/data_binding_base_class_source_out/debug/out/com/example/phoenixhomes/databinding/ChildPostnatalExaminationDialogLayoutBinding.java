// Generated by view binder compiler. Do not edit!
package com.example.phoenixhomes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.phoenixhomes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChildPostnatalExaminationDialogLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText artHolder2;

  @NonNull
  public final EditText babyConditionHolder2;

  @NonNull
  public final EditText babyTempHolder2;

  @NonNull
  public final EditText breastfeedingHolder2;

  @NonNull
  public final EditText breatheHolder2;

  @NonNull
  public final EditText cotrimoxazoleHolder2;

  @NonNull
  public final EditText feedingHolder2;

  @NonNull
  public final EditText immunizationHolder2;

  @NonNull
  public final AppCompatButton submit3;

  @NonNull
  public final EditText timeHolder2;

  @NonNull
  public final EditText ucHolder2;

  private ChildPostnatalExaminationDialogLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull EditText artHolder2, @NonNull EditText babyConditionHolder2,
      @NonNull EditText babyTempHolder2, @NonNull EditText breastfeedingHolder2,
      @NonNull EditText breatheHolder2, @NonNull EditText cotrimoxazoleHolder2,
      @NonNull EditText feedingHolder2, @NonNull EditText immunizationHolder2,
      @NonNull AppCompatButton submit3, @NonNull EditText timeHolder2,
      @NonNull EditText ucHolder2) {
    this.rootView = rootView;
    this.artHolder2 = artHolder2;
    this.babyConditionHolder2 = babyConditionHolder2;
    this.babyTempHolder2 = babyTempHolder2;
    this.breastfeedingHolder2 = breastfeedingHolder2;
    this.breatheHolder2 = breatheHolder2;
    this.cotrimoxazoleHolder2 = cotrimoxazoleHolder2;
    this.feedingHolder2 = feedingHolder2;
    this.immunizationHolder2 = immunizationHolder2;
    this.submit3 = submit3;
    this.timeHolder2 = timeHolder2;
    this.ucHolder2 = ucHolder2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChildPostnatalExaminationDialogLayoutBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChildPostnatalExaminationDialogLayoutBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.child_postnatal_examination_dialog_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChildPostnatalExaminationDialogLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.artHolder2;
      EditText artHolder2 = ViewBindings.findChildViewById(rootView, id);
      if (artHolder2 == null) {
        break missingId;
      }

      id = R.id.babyConditionHolder2;
      EditText babyConditionHolder2 = ViewBindings.findChildViewById(rootView, id);
      if (babyConditionHolder2 == null) {
        break missingId;
      }

      id = R.id.babyTempHolder2;
      EditText babyTempHolder2 = ViewBindings.findChildViewById(rootView, id);
      if (babyTempHolder2 == null) {
        break missingId;
      }

      id = R.id.breastfeedingHolder2;
      EditText breastfeedingHolder2 = ViewBindings.findChildViewById(rootView, id);
      if (breastfeedingHolder2 == null) {
        break missingId;
      }

      id = R.id.breatheHolder2;
      EditText breatheHolder2 = ViewBindings.findChildViewById(rootView, id);
      if (breatheHolder2 == null) {
        break missingId;
      }

      id = R.id.cotrimoxazoleHolder2;
      EditText cotrimoxazoleHolder2 = ViewBindings.findChildViewById(rootView, id);
      if (cotrimoxazoleHolder2 == null) {
        break missingId;
      }

      id = R.id.feedingHolder2;
      EditText feedingHolder2 = ViewBindings.findChildViewById(rootView, id);
      if (feedingHolder2 == null) {
        break missingId;
      }

      id = R.id.immunizationHolder2;
      EditText immunizationHolder2 = ViewBindings.findChildViewById(rootView, id);
      if (immunizationHolder2 == null) {
        break missingId;
      }

      id = R.id.submit3;
      AppCompatButton submit3 = ViewBindings.findChildViewById(rootView, id);
      if (submit3 == null) {
        break missingId;
      }

      id = R.id.timeHolder2;
      EditText timeHolder2 = ViewBindings.findChildViewById(rootView, id);
      if (timeHolder2 == null) {
        break missingId;
      }

      id = R.id.ucHolder2;
      EditText ucHolder2 = ViewBindings.findChildViewById(rootView, id);
      if (ucHolder2 == null) {
        break missingId;
      }

      return new ChildPostnatalExaminationDialogLayoutBinding((LinearLayout) rootView, artHolder2,
          babyConditionHolder2, babyTempHolder2, breastfeedingHolder2, breatheHolder2,
          cotrimoxazoleHolder2, feedingHolder2, immunizationHolder2, submit3, timeHolder2,
          ucHolder2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
