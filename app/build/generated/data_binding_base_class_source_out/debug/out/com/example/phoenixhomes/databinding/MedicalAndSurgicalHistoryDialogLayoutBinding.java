// Generated by view binder compiler. Do not edit!
package com.example.phoenixhomes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.phoenixhomes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MedicalAndSurgicalHistoryDialogLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText allergyHolder1;

  @NonNull
  public final EditText bloodTransfusionHolder1;

  @NonNull
  public final EditText diabetesHolder1;

  @NonNull
  public final EditText hyperTensionHolder1;

  @NonNull
  public final EditText otherHolder1;

  @NonNull
  public final Button submit;

  @NonNull
  public final EditText surgicalOperationHolder1;

  @NonNull
  public final EditText tbHolder1;

  @NonNull
  public final EditText tuberculosisHolder1;

  @NonNull
  public final EditText twinsHolder1;

  private MedicalAndSurgicalHistoryDialogLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull EditText allergyHolder1, @NonNull EditText bloodTransfusionHolder1,
      @NonNull EditText diabetesHolder1, @NonNull EditText hyperTensionHolder1,
      @NonNull EditText otherHolder1, @NonNull Button submit,
      @NonNull EditText surgicalOperationHolder1, @NonNull EditText tbHolder1,
      @NonNull EditText tuberculosisHolder1, @NonNull EditText twinsHolder1) {
    this.rootView = rootView;
    this.allergyHolder1 = allergyHolder1;
    this.bloodTransfusionHolder1 = bloodTransfusionHolder1;
    this.diabetesHolder1 = diabetesHolder1;
    this.hyperTensionHolder1 = hyperTensionHolder1;
    this.otherHolder1 = otherHolder1;
    this.submit = submit;
    this.surgicalOperationHolder1 = surgicalOperationHolder1;
    this.tbHolder1 = tbHolder1;
    this.tuberculosisHolder1 = tuberculosisHolder1;
    this.twinsHolder1 = twinsHolder1;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MedicalAndSurgicalHistoryDialogLayoutBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MedicalAndSurgicalHistoryDialogLayoutBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.medical_and_surgical_history_dialog_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MedicalAndSurgicalHistoryDialogLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.allergyHolder1;
      EditText allergyHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (allergyHolder1 == null) {
        break missingId;
      }

      id = R.id.bloodTransfusionHolder1;
      EditText bloodTransfusionHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (bloodTransfusionHolder1 == null) {
        break missingId;
      }

      id = R.id.diabetesHolder1;
      EditText diabetesHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (diabetesHolder1 == null) {
        break missingId;
      }

      id = R.id.hyperTensionHolder1;
      EditText hyperTensionHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (hyperTensionHolder1 == null) {
        break missingId;
      }

      id = R.id.otherHolder1;
      EditText otherHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (otherHolder1 == null) {
        break missingId;
      }

      id = R.id.submit;
      Button submit = ViewBindings.findChildViewById(rootView, id);
      if (submit == null) {
        break missingId;
      }

      id = R.id.surgicalOperationHolder1;
      EditText surgicalOperationHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (surgicalOperationHolder1 == null) {
        break missingId;
      }

      id = R.id.tbHolder1;
      EditText tbHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (tbHolder1 == null) {
        break missingId;
      }

      id = R.id.tuberculosisHolder1;
      EditText tuberculosisHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (tuberculosisHolder1 == null) {
        break missingId;
      }

      id = R.id.twinsHolder1;
      EditText twinsHolder1 = ViewBindings.findChildViewById(rootView, id);
      if (twinsHolder1 == null) {
        break missingId;
      }

      return new MedicalAndSurgicalHistoryDialogLayoutBinding((LinearLayout) rootView,
          allergyHolder1, bloodTransfusionHolder1, diabetesHolder1, hyperTensionHolder1,
          otherHolder1, submit, surgicalOperationHolder1, tbHolder1, tuberculosisHolder1,
          twinsHolder1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
